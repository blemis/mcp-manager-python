<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="14" skipped="0" tests="26" time="37.476" timestamp="2025-07-24T17:31:47.481730-04:00" hostname="BlemisMac.local"><testcase classname="tests.test_server_management.TestServerAddition" name="test_add_server_by_type[npm-npx @test/server-args0]" time="0.163"><failure message="AssertionError: &#10;Test: Add npm server&#10;Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main add test-npm-server --type npm --command npx @test/server --args --directory /tmp&#10;Expected: Success&#10;Actual: Failure (code 2)&#10;STDOUT: &#10;STDERR: &lt;frozen runpy&gt;:128: RuntimeWarning: 'mcp_manager.cli.main' found in sys.modules after import of package 'mcp_manager.cli', but prior to execution of 'mcp_manager.cli.main'; this may result in unpredic">tests/test_server_management.py:34: in test_add_server_by_type
    TestAssertions.assert_command_success(result, f"Add {server_type} server")
tests/utils/validators.py:217: in assert_command_success
    raise AssertionError(error_msg)
E   AssertionError: 
E   Test: Add npm server
E   Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main add test-npm-server --type npm --command npx @test/server --args --directory /tmp
E   Expected: Success
E   Actual: Failure (code 2)
E   STDOUT: 
E   STDERR: &lt;frozen runpy&gt;:128: RuntimeWarning: 'mcp_manager.cli.main' found in sys.modules after import of package 'mcp_manager.cli', but prior to execution of 'mcp_manager.cli.main'; this may result in unpredic</failure></testcase><testcase classname="tests.test_server_management.TestServerAddition" name="test_add_server_by_type[docker-docker run test/server-args1]" time="1.827"><failure message="AssertionError: &#10;Test: Added docker server appears in list&#10;Missing items: ['test-docker-server']&#10;In text: &#10;                             MCP Servers (4 total)                              &#10;┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━┳━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓&#10;┃ Name            ┃ Type    ┃ Sc… ┃ Sta… ┃ Command                             ┃&#10;┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━╇━━━━━━╇━━━━━━━━━━━━━━">tests/test_server_management.py:43: in test_add_server_by_type
    TestAssertions.assert_contains_all(
tests/utils/validators.py:290: in assert_contains_all
    raise AssertionError(error_msg)
E   AssertionError: 
E   Test: Added docker server appears in list
E   Missing items: ['test-docker-server']
E   In text: 
E                                MCP Servers (4 total)                              
E   ┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━┳━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
E   ┃ Name            ┃ Type    ┃ Sc… ┃ Sta… ┃ Command                             ┃
E   ┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━╇━━━━━━╇━━━━━━━━━━━━━━</failure></testcase><testcase classname="tests.test_server_management.TestServerAddition" name="test_add_server_by_type[custom-python test_server.py-args2]" time="0.164"><failure message="AssertionError: &#10;Test: Add custom server&#10;Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main add test-custom-server --type custom --command python test_server.py --args --config test.json&#10;Expected: Success&#10;Actual: Failure (code 2)&#10;STDOUT: &#10;STDERR: &lt;frozen runpy&gt;:128: RuntimeWarning: 'mcp_manager.cli.main' found in sys.modules after import of package 'mcp_manager.cli', but prior to execution of 'mcp_manager.cli.main'; this may result in unpredic">tests/test_server_management.py:34: in test_add_server_by_type
    TestAssertions.assert_command_success(result, f"Add {server_type} server")
tests/utils/validators.py:217: in assert_command_success
    raise AssertionError(error_msg)
E   AssertionError: 
E   Test: Add custom server
E   Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main add test-custom-server --type custom --command python test_server.py --args --config test.json
E   Expected: Success
E   Actual: Failure (code 2)
E   STDOUT: 
E   STDERR: &lt;frozen runpy&gt;:128: RuntimeWarning: 'mcp_manager.cli.main' found in sys.modules after import of package 'mcp_manager.cli', but prior to execution of 'mcp_manager.cli.main'; this may result in unpredic</failure></testcase><testcase classname="tests.test_server_management.TestServerAddition" name="test_add_server_minimal_args" time="0.902" /><testcase classname="tests.test_server_management.TestServerAddition" name="test_add_server_duplicate_name" time="1.799"><failure message="AssertionError: &#10;Test: Duplicate server add&#10;Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main add test-duplicate-server --type custom --command echo duplicate&#10;Expected: Failure&#10;Actual: Success (returncode 0)&#10;Output: ❌ Failed to add server: Failed to add server test-duplicate-server: Failed to &#10;add server: Failed to add server: MCP server test-duplicate-server already &#10;exists in user config">tests/test_server_management.py:79: in test_add_server_duplicate_name
    TestAssertions.assert_command_failure(result2, "Duplicate server add")
tests/utils/validators.py:248: in assert_command_failure
    raise AssertionError(error_msg)
E   AssertionError: 
E   Test: Duplicate server add
E   Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main add test-duplicate-server --type custom --command echo duplicate
E   Expected: Failure
E   Actual: Success (returncode 0)
E   Output: ❌ Failed to add server: Failed to add server test-duplicate-server: Failed to 
E   add server: Failed to add server: MCP server test-duplicate-server already 
E   exists in user config</failure></testcase><testcase classname="tests.test_server_management.TestServerAddition" name="test_add_server_invalid_type" time="0.163" /><testcase classname="tests.test_server_management.TestServerAddition" name="test_add_server_missing_command" time="0.536"><failure message="AssertionError: &#10;Test: Missing command&#10;Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main add test-no-command --type custom&#10;Expected: Failure&#10;Actual: Success (returncode 0)&#10;Output: ❌ Failed to add server: Failed to add server test-no-command: 1 validation &#10;error for Server&#10;command&#10;  Value error, Server command cannot be empty &#10;    For further information visit https://errors.pyd">tests/test_server_management.py:102: in test_add_server_missing_command
    TestAssertions.assert_command_failure(result, "Missing command")
tests/utils/validators.py:248: in assert_command_failure
    raise AssertionError(error_msg)
E   AssertionError: 
E   Test: Missing command
E   Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main add test-no-command --type custom
E   Expected: Failure
E   Actual: Success (returncode 0)
E   Output: ❌ Failed to add server: Failed to add server test-no-command: 1 validation 
E   error for Server
E   command
E     Value error, Server command cannot be empty 
E       For further information visit https://errors.pyd</failure></testcase><testcase classname="tests.test_server_management.TestServerRemoval" name="test_remove_existing_server" time="1.438"><failure message="assert False&#10; +  where False = &lt;function OutputValidator.validate_success_message at 0x10338d3a0&gt;(&quot;Remove server 'test-remove-server'? [y/n]: Failed to remove server: EOF when reading a line\n&quot;, 'remove')&#10; +    where &lt;function OutputValidator.validate_success_message at 0x10338d3a0&gt; = OutputValidator.validate_success_message">tests/test_server_management.py:121: in test_remove_existing_server
    assert OutputValidator.validate_success_message(remove_result['stdout'], "remove")
E   assert False
E    +  where False = &lt;function OutputValidator.validate_success_message at 0x10338d3a0&gt;("Remove server 'test-remove-server'? [y/n]: Failed to remove server: EOF when reading a line\n", 'remove')
E    +    where &lt;function OutputValidator.validate_success_message at 0x10338d3a0&gt; = OutputValidator.validate_success_message</failure></testcase><testcase classname="tests.test_server_management.TestServerRemoval" name="test_remove_nonexistent_server" time="0.530"><failure message="assert ('not found' in &quot;remove server 'nonexistent-server-xyz'? [y/n]: failed to remove server: eof when reading a line\n&quot; or 'does not exist' in &quot;remove server 'nonexistent-server-xyz'? [y/n]: failed to remove server: eof when reading a line\n&quot;)&#10; +  where &quot;remove server 'nonexistent-server-xyz'? [y/n]: failed to remove server: eof when reading a line\n&quot; = &lt;built-in method lower of str object at 0x1036991a0&gt;()&#10; +    where &lt;built-in method lower of str object at 0x1036991a0&gt; = &quot;Remove server 'nonexistent-server-xyz'? [y/n]: Failed to remove server: EOF when reading a line\n&quot;.lower&#10; +  and   &quot;remove server 'nonexistent-server-xyz'? [y/n]: failed to remove server: eof when reading a line\n&quot; = &lt;built-in method lower of str object at 0x1036991a0&gt;()&#10; +    where &lt;built-in method lower of str object at 0x1036991a0&gt; = &quot;Remove server 'nonexistent-server-xyz'? [y/n]: Failed to remove server: EOF when reading a line\n&quot;.lower">tests/test_server_management.py:140: in test_remove_nonexistent_server
    assert "not found" in result['stdout'].lower() or \
E   assert ('not found' in "remove server 'nonexistent-server-xyz'? [y/n]: failed to remove server: eof when reading a line\n" or 'does not exist' in "remove server 'nonexistent-server-xyz'? [y/n]: failed to remove server: eof when reading a line\n")
E    +  where "remove server 'nonexistent-server-xyz'? [y/n]: failed to remove server: eof when reading a line\n" = &lt;built-in method lower of str object at 0x1036991a0&gt;()
E    +    where &lt;built-in method lower of str object at 0x1036991a0&gt; = "Remove server 'nonexistent-server-xyz'? [y/n]: Failed to remove server: EOF when reading a line\n".lower
E    +  and   "remove server 'nonexistent-server-xyz'? [y/n]: failed to remove server: eof when reading a line\n" = &lt;built-in method lower of str object at 0x1036991a0&gt;()
E    +    where &lt;built-in method lower of str object at 0x1036991a0&gt; = "Remove server 'nonexistent-server-xyz'? [y/n]: Failed to remove server: EOF when reading a line\n".lower</failure></testcase><testcase classname="tests.test_server_management.TestServerRemoval" name="test_remove_with_confirmation" time="1.818" /><testcase classname="tests.test_server_management.TestServerListing" name="test_list_empty_servers" time="0.934" /><testcase classname="tests.test_server_management.TestServerListing" name="test_list_with_servers" time="3.668" /><testcase classname="tests.test_server_management.TestServerListing" name="test_list_with_scope[user]" time="0.945" /><testcase classname="tests.test_server_management.TestServerListing" name="test_list_with_scope[project]" time="0.938" /><testcase classname="tests.test_server_management.TestServerListing" name="test_list_with_scope[global]" time="0.165"><failure message="AssertionError: &#10;Test: List with scope global&#10;Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main list --scope global&#10;Expected: Success&#10;Actual: Failure (code 2)&#10;STDOUT: &#10;STDERR: &lt;frozen runpy&gt;:128: RuntimeWarning: 'mcp_manager.cli.main' found in sys.modules after import of package 'mcp_manager.cli', but prior to execution of 'mcp_manager.cli.main'; this may result in unpredic">tests/test_server_management.py:198: in test_list_with_scope
    TestAssertions.assert_command_success(result, f"List with scope {scope}")
tests/utils/validators.py:217: in assert_command_success
    raise AssertionError(error_msg)
E   AssertionError: 
E   Test: List with scope global
E   Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main list --scope global
E   Expected: Success
E   Actual: Failure (code 2)
E   STDOUT: 
E   STDERR: &lt;frozen runpy&gt;:128: RuntimeWarning: 'mcp_manager.cli.main' found in sys.modules after import of package 'mcp_manager.cli', but prior to execution of 'mcp_manager.cli.main'; this may result in unpredic</failure></testcase><testcase classname="tests.test_server_management.TestServerListing" name="test_list_with_filters" time="3.223" /><testcase classname="tests.test_server_management.TestServerEnableDisable" name="test_enable_server" time="1.857" /><testcase classname="tests.test_server_management.TestServerEnableDisable" name="test_disable_server" time="1.825" /><testcase classname="tests.test_server_management.TestServerEnableDisable" name="test_enable_disable_nonexistent" time="1.862"><failure message="assert False&#10; +  where False = &lt;function OutputValidator.validate_error_message at 0x10338d440&gt;(&quot;&lt;frozen runpy&gt;:128: RuntimeWarning: 'mcp_manager.cli.main' found in sys.modules after import of package 'mcp_manager.cli', but prior to execution of 'mcp_manager.cli.main'; this may result in unpredictable behaviour\n[07/24/25 17:32:12] ERROR    Failed to remove server 'nonexistent-server': No   \n                             user-scoped MCP server found with name:            \n                             nonexistent-server                                 \n                    ERROR    Failed to remove server 'nonexistent-server':      \n                             Failed to remove server: No user-scoped MCP server \n                             found with name: nonexistent-server                \n                    ERROR    Error disabling server nonexistent-server: Failed  \n                             to remove server: Failed to remove server: No      \n                             user-scoped MCP server found with name:            \n                             nonexistent-server                                 \n&quot;, 'not found')&#10; +    where &lt;function OutputValidator.validate_error_message at 0x10338d440&gt; = OutputValidator.validate_error_message">tests/test_server_management.py:264: in test_enable_disable_nonexistent
    assert OutputValidator.validate_error_message(result2['stderr'], "not found")
E   assert False
E    +  where False = &lt;function OutputValidator.validate_error_message at 0x10338d440&gt;("&lt;frozen runpy&gt;:128: RuntimeWarning: 'mcp_manager.cli.main' found in sys.modules after import of package 'mcp_manager.cli', but prior to execution of 'mcp_manager.cli.main'; this may result in unpredictable behaviour\n[07/24/25 17:32:12] ERROR    Failed to remove server 'nonexistent-server': No   \n                             user-scoped MCP server found with name:            \n                             nonexistent-server                                 \n                    ERROR    Failed to remove server 'nonexistent-server':      \n                             Failed to remove server: No user-scoped MCP server \n                             found with name: nonexistent-server                \n                    ERROR    Error disabling server nonexistent-server: Failed  \n                             to remove server: Failed to remove server: No      \n                             user-scoped MCP server found with name:            \n                             nonexistent-server                                 \n", 'not found')
E    +    where &lt;function OutputValidator.validate_error_message at 0x10338d440&gt; = OutputValidator.validate_error_message</failure></testcase><testcase classname="tests.test_server_management.TestPackageInstallation" name="test_install_package_basic" time="0.390" /><testcase classname="tests.test_server_management.TestPackageInstallation" name="test_install_nonexistent_package" time="0.560"><failure message="AssertionError: &#10;Test: Install nonexistent package&#10;Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main install-package nonexistent-package-xyz&#10;Expected: Failure&#10;Actual: Success (returncode 0)&#10;Output: #x1F50D Searching for server with ID: nonexistent-package-xyz&#10;❌ Server with install ID 'nonexistent-package-xyz' not found&#10;#x1F4A1 Try running 'mcp-manager discover' to see available servers">tests/test_server_management.py:292: in test_install_nonexistent_package
    TestAssertions.assert_command_failure(result, "Install nonexistent package")
tests/utils/validators.py:248: in assert_command_failure
    raise AssertionError(error_msg)
E   AssertionError: 
E   Test: Install nonexistent package
E   Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main install-package nonexistent-package-xyz
E   Expected: Failure
E   Actual: Success (returncode 0)
E   Output: #x1F50D Searching for server with ID: nonexistent-package-xyz
E   ❌ Server with install ID 'nonexistent-package-xyz' not found
E   #x1F4A1 Try running 'mcp-manager discover' to see available servers</failure></testcase><testcase classname="tests.test_server_management.TestServerValidation" name="test_add_server_empty_name" time="0.541"><failure message="AssertionError: &#10;Test: Empty server name&#10;Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main add  --type custom --command test&#10;Expected: Failure&#10;Actual: Success (returncode 0)&#10;Output: ❌ Failed to add server: Failed to add server : 1 validation error for Server&#10;name&#10;  Value error, Server name cannot be empty &#10;    For further information visit https://errors.pydantic.dev/2.11/v/value">tests/test_server_management.py:306: in test_add_server_empty_name
    TestAssertions.assert_command_failure(result, "Empty server name")
tests/utils/validators.py:248: in assert_command_failure
    raise AssertionError(error_msg)
E   AssertionError: 
E   Test: Empty server name
E   Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main add  --type custom --command test
E   Expected: Failure
E   Actual: Success (returncode 0)
E   Output: ❌ Failed to add server: Failed to add server : 1 validation error for Server
E   name
E     Value error, Server name cannot be empty 
E       For further information visit https://errors.pydantic.dev/2.11/v/value</failure></testcase><testcase classname="tests.test_server_management.TestServerValidation" name="test_add_server_empty_command" time="0.540"><failure message="AssertionError: &#10;Test: Empty server command&#10;Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main add test-empty-cmd --type custom --command &#10;Expected: Failure&#10;Actual: Success (returncode 0)&#10;Output: ❌ Failed to add server: Failed to add server test-empty-cmd: 1 validation error&#10;for Server&#10;command&#10;  Value error, Server command cannot be empty &#10;    For further information visit https://errors.pydan">tests/test_server_management.py:315: in test_add_server_empty_command
    TestAssertions.assert_command_failure(result, "Empty server command")
tests/utils/validators.py:248: in assert_command_failure
    raise AssertionError(error_msg)
E   AssertionError: 
E   Test: Empty server command
E   Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main add test-empty-cmd --type custom --command 
E   Expected: Failure
E   Actual: Success (returncode 0)
E   Output: ❌ Failed to add server: Failed to add server test-empty-cmd: 1 validation error
E   for Server
E   command
E     Value error, Server command cannot be empty 
E       For further information visit https://errors.pydan</failure></testcase><testcase classname="tests.test_server_management.TestServerValidation" name="test_add_server_invalid_characters" time="0.535"><failure message="AssertionError: &#10;Test: Invalid name: test server&#10;Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main add test server --type custom --command test&#10;Expected: Failure&#10;Actual: Success (returncode 0)&#10;Output: ❌ Failed to add server: Failed to add server test server">tests/test_server_management.py:334: in test_add_server_invalid_characters
    TestAssertions.assert_command_failure(result, f"Invalid name: {invalid_name}")
tests/utils/validators.py:248: in assert_command_failure
    raise AssertionError(error_msg)
E   AssertionError: 
E   Test: Invalid name: test server
E   Command: /opt/homebrew/anaconda3/bin/python -m mcp_manager.cli.main add test server --type custom --command test
E   Expected: Failure
E   Actual: Success (returncode 0)
E   Output: ❌ Failed to add server: Failed to add server test server</failure></testcase><testcase classname="tests.test_server_management.TestServerLifecycle" name="test_complete_server_lifecycle" time="1.869"><failure message="AssertionError: &#10;Test: Lifecycle: Server in list&#10;Missing items: ['test-lifecycle-server']&#10;In text: &#10;                             MCP Servers (14 total)                             &#10;┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━┳━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓&#10;┃ Name            ┃ Type    ┃ Sc… ┃ Sta… ┃ Command                             ┃&#10;┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━╇━━━━━━╇━━━━━━━━━━━━━━">tests/test_server_management.py:354: in test_complete_server_lifecycle
    TestAssertions.assert_contains_all(
tests/utils/validators.py:290: in assert_contains_all
    raise AssertionError(error_msg)
E   AssertionError: 
E   Test: Lifecycle: Server in list
E   Missing items: ['test-lifecycle-server']
E   In text: 
E                                MCP Servers (14 total)                             
E   ┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━┳━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
E   ┃ Name            ┃ Type    ┃ Sc… ┃ Sta… ┃ Command                             ┃
E   ┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━╇━━━━━━╇━━━━━━━━━━━━━━</failure></testcase><testcase classname="tests.test_server_management.TestServerLifecycle" name="test_bulk_server_operations" time="8.203" /></testsuite></testsuites>