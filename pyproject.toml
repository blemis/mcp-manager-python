[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-manager"
dynamic = ["version"]
description = "Enterprise-grade MCP (Model Context Protocol) server management tool"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
    { name = "Claude & Human Collaboration", email = "noreply@anthropic.com" },
]
keywords = [
    "mcp",
    "model-context-protocol",
    "claude",
    "server-management",
    "tui",
    "cli",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Environment :: Console :: Curses",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
dependencies = [
    "textual>=0.41.0",
    "rich>=13.0.0",
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "toml>=0.10.0",
    "psutil>=5.9.0",
    "aiofiles>=23.0.0",
    "httpx>=0.24.0",
    "pyyaml>=6.0.0",
    "watchdog>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.11.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/anthropics/claude-mcp-manager"
Documentation = "https://claude-mcp-manager.readthedocs.io"
Repository = "https://github.com/anthropics/claude-mcp-manager"
"Bug Tracker" = "https://github.com/anthropics/claude-mcp-manager/issues"

[project.scripts]
mcp-manager = "mcp_manager.cli.main:main"
mcp-tui = "mcp_manager.tui.main:main"

[tool.hatch.version]
path = "src/mcp_manager/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_manager"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mcp_manager"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=mcp_manager",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]